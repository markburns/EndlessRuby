#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require File.join(File.dirname(__FILE__), '..', 'endlessruby')

module EndlessRuby::Main

  extend self
  extend EndlessRuby
  include EndlessRuby

  def compile er, rb
    open(er) do |erfile|
      open(rb, "w") do |rbfile|
        rbfile.write ER2PR(erfile.read)

  def endlessruby *argv
    EndlessRuby::Main.main argv

  def self.main *argv

    require 'optparse'

    options = {
    }

    parser = OptionParser.new do |opts|
      opts.on '-o OUT' do |out|
        options[:out] = out

      opts.on '-c', '--compile' do |c|
        options[:compile] = true

      opts.on '-r' do |r|
        options[:recursive] = true

    parser.parse! argv

    if options[:compile]
      out = options[:out] || '.'

      argv.each do |er|
        unless File.exist? er
          puts "no such file to load -- #{er}"
          next

        if File.directory? er
          unless options[:recursive]
            puts "Is a directory - #{er}"
            next
          # Unimolementation
          next

        rb = er
        if er =~ /^(.*)\.er$/
          rb = $1
        rb = File.split(rb)[1]
        rb = File.join(out, "#{rb}.rb")
        compile er, rb

      return

    $PROGRAM_NAME = ARGV.shift
    require $PROGRAM_NAME
